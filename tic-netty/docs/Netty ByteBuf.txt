1. 自从Netty 4开始，对象的生命周期由它们的引用计数（reference counts）管理，而不是由垃圾收集器（garbage collector）管理了。
ByteBuf是最值得注意的，它使用了引用计数来改进分配内存和释放内存的性能。

2. ByteBuf示意图
+--------------------------+--------------------------+--------------------------+
|   discardable bytes      |  readable bytes(content) | writable bytes           |
|                          |                          |                          |
+--------------------------+--------------------------+--------------------------+

ByteBuf从分配内存的角度来讲，分为两种：DirectByteBuf、HeapByteBuf。DirectByteBuf是直接内存，好处是利用的是native库，读写快速。
但是它不在虚拟机的管理范围之内，这部分内存只有在进行full gc时才会进行回收，而他的容量如果没有明确限制，随着数据的不断读写势必
造成内存中可利用的空间不断变小。所以netty做了引用计数机制来处理direct memory上的数据。

相关代码如下：


--------------------------
每个对象的初始引用计数为1，测试代码如下：

