微服务

1. 在微服务架构中，组件之间可以通过任意协议进行通信，比如HTTP或AMQP
2. 每个组件是独立的，因此我们可以在不同的组件中使用不同的编程语言，不同的技术，这就是所谓的polyglot support
3. 每个组件都是独立开发、部署以及发布的，所以减少了部署及发布的难度
4. 微服务架构与分布式系统形影不离，需要考虑分布式系统中的方方面面，包括可用性、弹性以及可扩展性
5. 微服务架构通常被设计成为面向失败的，因为在分布式系统中失败的场景非常复杂，我们需要有效地处理失败的手段


服务发现：在微服务架构中，每个组件都是独立的，它们都不知道其他组件的位置，但是组件之间又需要通信，因此我们必须知道各个组件的位置。然而，把位置信息写死在代码中显然不好，因此我们需要一种机制可以动态地记录每个组件的位置——这就是服务发现。有了服务发现模块，我们就可以将服务位置发布至服务发现模块中，其它服务就可以从服务发现模块中获取想要调用的服务的位置并进行调用。在调用服务的过程中，我们不需要知道对应服务的位置，所以当服务位置或环境变动时，服务调用可以不受影响，这使得我们的架构更加灵活。

