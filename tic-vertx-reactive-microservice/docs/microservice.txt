微服务

1. 在微服务架构中，组件之间可以通过任意协议进行通信，比如HTTP或AMQP
2. 每个组件是独立的，因此我们可以在不同的组件中使用不同的编程语言，不同的技术，这就是所谓的polyglot support
3. 每个组件都是独立开发、部署以及发布的，所以减少了部署及发布的难度
4. 微服务架构与分布式系统形影不离，需要考虑分布式系统中的方方面面，包括可用性、弹性以及可扩展性
5. 微服务架构通常被设计成为面向失败的，因为在分布式系统中失败的场景非常复杂，我们需要有效地处理失败的手段



本系统参考文章：https://github.com/redhat-developer/reactive-microservices-in-java