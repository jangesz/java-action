/*
 * This file is generated by jOOQ.
*/
package org.tic.vertx.examples.web.ueditor.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.tic.vertx.examples.web.ueditor.jooq.Keys;
import org.tic.vertx.examples.web.ueditor.jooq.Test2;
import org.tic.vertx.examples.web.ueditor.jooq.tables.records.TUeditorRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TUeditor extends TableImpl<TUeditorRecord> {

    private static final long serialVersionUID = 1565259543;

    /**
     * The reference instance of <code>test2.t_ueditor</code>
     */
    public static final TUeditor T_UEDITOR = new TUeditor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TUeditorRecord> getRecordType() {
        return TUeditorRecord.class;
    }

    /**
     * The column <code>test2.t_ueditor.id</code>. 主键
     */
    public final TableField<TUeditorRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "主键");

    /**
     * The column <code>test2.t_ueditor.content</code>.
     */
    public final TableField<TUeditorRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>test2.t_ueditor.created_at</code>.
     */
    public final TableField<TUeditorRecord, Long> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>test2.t_ueditor.updated_at</code>.
     */
    public final TableField<TUeditorRecord, Long> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>test2.t_ueditor</code> table reference
     */
    public TUeditor() {
        this("t_ueditor", null);
    }

    /**
     * Create an aliased <code>test2.t_ueditor</code> table reference
     */
    public TUeditor(String alias) {
        this(alias, T_UEDITOR);
    }

    private TUeditor(String alias, Table<TUeditorRecord> aliased) {
        this(alias, aliased, null);
    }

    private TUeditor(String alias, Table<TUeditorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test2.TEST2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TUeditorRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_UEDITOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TUeditorRecord> getPrimaryKey() {
        return Keys.KEY_T_UEDITOR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TUeditorRecord>> getKeys() {
        return Arrays.<UniqueKey<TUeditorRecord>>asList(Keys.KEY_T_UEDITOR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUeditor as(String alias) {
        return new TUeditor(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TUeditor rename(String name) {
        return new TUeditor(name, null);
    }
}
