/*
 * This file is generated by jOOQ.
*/
package org.tic.vertx.examples.web.ueditor.jooq;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.tic.vertx.examples.web.ueditor.jooq.tables.TUeditor;
import org.tic.vertx.examples.web.ueditor.jooq.tables.records.TUeditorRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>test2</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TUeditorRecord, Long> IDENTITY_T_UEDITOR = Identities0.IDENTITY_T_UEDITOR;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TUeditorRecord> KEY_T_UEDITOR_PRIMARY = UniqueKeys0.KEY_T_UEDITOR_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<TUeditorRecord, Long> IDENTITY_T_UEDITOR = createIdentity(TUeditor.T_UEDITOR, TUeditor.T_UEDITOR.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<TUeditorRecord> KEY_T_UEDITOR_PRIMARY = createUniqueKey(TUeditor.T_UEDITOR, "KEY_t_ueditor_PRIMARY", TUeditor.T_UEDITOR.ID);
    }
}
